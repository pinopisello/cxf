WS-notification e' un framework definito da OASIS  specs [https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=wsn] che permette:

These specifications provide a standardized way for a Web service, or other entity, to disseminate information to a set of other Web services, 
without having to have prior knowledge of these other Web Services. They can be thought of as defining "Publish/Subscribe for Web services".

Le specifiche definiscono:

WS-BaseNotification 
WS-BrokeredNotification 
WS-Topics 

Assomiglia molto a ws_eventing con differenza che:

1)lato server c'e' JMS e le notifiche vengono inviate ad un topic specificato dal subscriber [we_eventing non c'e' jms lato server]
2)gli eventi che scatenano le notifice vengono inviati via soap http con uno schema prefissato [ws_eventing eventi sono generati lato server con api]
3)le subscriptions non hanno ne filtri ne enddate [al contrario di ws-eventing]



[-Pwsn-server] Lancia org.apache.cxf.wsn.services.Service  [cxf-services-wsn-core].
Lancia un activemq-broker su : vm:(broker:(tcp://localhost:6000)?persistent=false)
Poi instanzia :


JaxwsNotificationBroker => http://0.0.0.0:9000/wsn/NotificationBroker

JaxwsCreatePullPoint    => http://0.0.0.0:9000/wsn/CreatePullPoint

Registra ambo oggetti as Mbeans. [jconsole permette di vedere i loro intestini]



[-Pclient]Lancia demo.client.Client il quale:

1)Instazia org.apache.cxf.wsn.client.Consumer in ascolto su http://localhost:9001/MyConsumer con un metodo notify(NotificationMessageHolderType message)
che System.out.println(message.getMessage().getAny().

 
2)Invia POST verso  http://0.0.0.0:9000/wsn/NotificationBroker:   [Subscription subscription = notificationBroker.subscribe(consumer, "MyTopic")]

Informa NotificationBroker che :

a) service Consumer e' in ascolto verso  http://localhost:9001/MyConsumer 
b) wsdl in file:/Users/glocon/.m2/repository/org/apache/cxf/services/wsn/cxf-services-wsn-api/3.2.0-SNAPSHOT/cxf-services-wsn-api-3.2.0-SNAPSHOT.jar!/org/apache/cxf/wsn/wsdl/wsn.wsdl
c) dichiara che vuole ricevere una notifica ogni volta che un JMS message viene inviato al topic "MyTopic"


<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
<soap:Body>
	<ns2:Subscribe xmlns="http://www.w3.org/2005/08/addressing"
		xmlns:ns2="http://docs.oasis-open.org/wsn/b-2" xmlns:ns3="http://docs.oasis-open.org/wsn/t-1"
		xmlns:ns4="http://docs.oasis-open.org/wsrf/bf-2" xmlns:ns5="http://docs.oasis-open.org/wsrf/rp-2"
		xmlns:ns6="http://docs.oasis-open.org/wsn/br-2" xmlns:ns7="http://docs.oasis-open.org/wsrf/r-2">
		<ns2:ConsumerReference>
			<Address>http://localhost:9001/MyConsumer</Address>
			<ReferenceParameters />
			<Metadata xmlns:wsdli="http://www.w3.org/ns/wsdl-instance"
				wsdli:wsdlLocation="http://cxf.apache.org/wsn/jaxws jar:file:/Users/glocon/.m2/repository/org/apache/cxf/services/wsn/cxf-services-wsn-api/3.2.0-SNAPSHOT/cxf-services-wsn-api-3.2.0-SNAPSHOT.jar!/org/apache/cxf/wsn/wsdl/wsn.wsdl">
				<wsam:InterfaceName xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
					xmlns:ns1="http://docs.oasis-open.org/wsn/bw-2" xmlns:wsa="http://www.w3.org/2005/08/addressing"
					xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl">ns1:NotificationConsumer</wsam:InterfaceName>
				<wsam:ServiceName xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
					xmlns:ns2="http://cxf.apache.org/wsn/jaxws" xmlns:wsa="http://www.w3.org/2005/08/addressing"
					xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
					EndpointName="NotificationConsumerPort">ns2:NotificationConsumerService</wsam:ServiceName>
				<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
					xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
					xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl">
					<wsdl:import
						location="jar:file:/Users/glocon/.m2/repository/org/apache/cxf/services/wsn/cxf-services-wsn-api/3.2.0-SNAPSHOT/cxf-services-wsn-api-3.2.0-SNAPSHOT.jar!/org/apache/cxf/wsn/wsdl/wsn.wsdl"
						namespace="http://cxf.apache.org/wsn/jaxws" />
				</wsdl:definitions>
			</Metadata>
		</ns2:ConsumerReference>
		<ns2:Filter>
			<ns2:TopicExpression>MyTopic</ns2:TopicExpression>
		</ns2:Filter>
	</ns2:Subscribe>
</soap:Body>
</soap:Envelope>


Questo messaggio crea lato server una Subscription con un consumer sul topic "MyTopic".
Vedi AbstractNotificationBroker.handleSubscribe() [JmsSubscription.start()]


3) Invia una notifica <ns8:foo xmlns:ns8="urn:test:org">Hello World!</ns8:foo>  [ http://0.0.0.0:9000/wsn/NotificationBroker]
<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
	<soap:Body>
		<ns2:Notify xmlns="http://www.w3.org/2005/08/addressing"
			xmlns:ns2="http://docs.oasis-open.org/wsn/b-2" xmlns:ns3="http://docs.oasis-open.org/wsn/t-1"
			xmlns:ns4="http://docs.oasis-open.org/wsrf/bf-2" xmlns:ns5="http://docs.oasis-open.org/wsrf/rp-2"
			xmlns:ns6="http://docs.oasis-open.org/wsn/br-2" xmlns:ns7="http://docs.oasis-open.org/wsrf/r-2">
			<ns2:NotificationMessage>
				<ns2:Topic>MyTopic</ns2:Topic>
				<ns2:Message>
					<ns8:foo xmlns:ns8="urn:test:org">Hello World!</ns8:foo>
				</ns2:Message>
			</ns2:NotificationMessage>
		</ns2:Notify>
	</soap:Body>
</soap:Envelope>



4)La notifica viene ricevuta da dal broker con una POST verso http://localhost:9001/MyConsumer metodo callback public void notify(NotificationMessageHolderType message) 

In particolare Consumer e' un @Webservice con unico metodo notify(Notify notify).
Questo metodo riceve  notifica inviata dal broker  per poi chiamare il metodo callback passando l oggetto
NotificationMessageHolderType contenente la notifica.


Inoltre la notifica viene inviata al broker via http [http://localhost:9000/wsn/NotificationBroker] e ricevuta dal Consumer in http://localhost:9001/MyConsumer




