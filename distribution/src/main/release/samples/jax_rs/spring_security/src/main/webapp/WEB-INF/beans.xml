<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cxf="http://cxf.apache.org/core" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd  http://cxf.apache.org http://cxf.apache.org/schemas/core.xsd
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
	
	<!--  ============   Definizione server jaxrs  =========== -->

	<jaxrs:server id="bookservice" address="/">
		<jaxrs:serviceBeans>
			<ref bean="customerservice"/>
			<ref bean="customerservice-secured"/>
		</jaxrs:serviceBeans>
		<jaxrs:providers>
		<bean class="demo.jaxrs.service.SecurityExceptionMapper"/>
		<!--<ref bean="jsonProvider"/>	-->	
	</jaxrs:providers>
		<jaxrs:features>
			<cxf:logging/>
		</jaxrs:features>
	</jaxrs:server>
	<bean id="customerservice" class="demo.jaxrs.service.CustomerServiceImpl"/>                <!-- La gestione authorizzazioni con <security:global-method-security-->
	<bean id="customerservice-secured" class="demo.jaxrs.service.CustomerServiceSecuredImpl"/> <!-- La gestione authorizzazioni con @Secured in CustomerServiceSecured.java -->
	

	<!-- ============ Definizione Spring security ===========-->
	<security:global-method-security
		secured-annotations="enabled">
		<security:protect-pointcut expression="execution(* demo.jaxrs.service.CustomerService.getCustomer(*))" access="ROLE_CUSTOMER,ROLE_ADMIN"/>
		<security:protect-pointcut expression="execution(* demo.jaxrs.service.CustomerService.addCustomer(*))" access="ROLE_ADMIN"/>
		<security:protect-pointcut expression="execution(* demo.jaxrs.service.CustomerService.updateCustomer(Long,demo.jaxrs.service.Customer))" access="ROLE_ADMIN"/>
		<security:protect-pointcut expression="execution(* demo.jaxrs.service.CustomerService.deleteCustomer(*))" access="ROLE_ADMIN"/>
		<security:protect-pointcut expression="execution(* demo.jaxrs.service.CustomerService.getOrder(*))" access="ROLE_CUSTOMER,ROLE_ADMIN"/>
	</security:global-method-security>
	
	<!-- abilita security per tutte le urls della web-app proteggendo con basic auth-->
	 <security:http auto-config="true">
	 	 <security:http-basic/> 
	 </security:http>
	
	<!--definisce users/passwords rispettivi roles -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="bob" password="bobspassword" authorities="ROLE_CUSTOMER"/>
				<security:user name="fred" password="fredspassword" authorities="ROLE_CUSTOMER, ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
		
	
</beans>
